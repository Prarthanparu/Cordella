{"ast":null,"code":"import axios from \"axios\";\nexport const client = axios.create({\n  baseURL: 'https://cordelia.fortelogic.in'\n});\nclient.interceptors.response.use(response => response, error => {// if (error.response.status === 401) {\n  //   localStorage.clear();\n  //   window.location.href = \"/accessdenied\";\n  // localStorage.setItem(\"isLoggedIn\", false);\n  // <Redirect to={{ pathname: \"/login\" }} />;\n  // <Route\n  //   render={() => (\n  //     <>\n  //       {/* {localStorage.clear()} */}\n  //     </>\n  //   )}\n  // />;\n  // }\n} // const { response } = error;\n// console.log(error, \"<<< error in interceptors\");\n// if (response.responseCode === 401) {\n//   return response;\n// } else if (response.responseCode === 400) {\n//   return response;\n// } else if (response.responseCode === 422) {\n//   return response;\n// } else {\n//   return response;\n// }\n// return Promise.reject(error.response);\n); // client.interceptors.response.use(\n//   // (response) => {\n//   //   if (response.status === 401) {\n//   //     alert(\"You are not authorized\");\n//   //   }\n//   //   return response;\n//   // },\n//   (error) => {\n//     if (error.response && error.response.data) {\n//       return Promise.reject(error.response.data);\n//     }\n//     return Promise.reject(error.message);\n//   }\n// );","map":{"version":3,"sources":["/Users/prarthanparu/Downloads/Cordelia/src/services/index.js"],"names":["axios","client","create","baseURL","interceptors","response","use","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAa;AACjCC,EAAAA,OAAO,EAAG;AADuB,CAAb,CAAf;AAIPF,MAAM,CAACG,YAAP,CAAoBC,QAApB,CAA6BC,GAA7B,CACGD,QAAD,IAAcA,QADhB,EAGGE,KAAD,IAAW,CACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAjBH,CAkBE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7BF,E,CA+BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\nexport const client = axios.create({\n  baseURL:  'https://cordelia.fortelogic.in'\n});\n\nclient.interceptors.response.use(\n  (response) => response,\n\n  (error) => {\n    // if (error.response.status === 401) {\n    //   localStorage.clear();\n    //   window.location.href = \"/accessdenied\";\n    // localStorage.setItem(\"isLoggedIn\", false);\n    // <Redirect to={{ pathname: \"/login\" }} />;\n    // <Route\n    //   render={() => (\n    //     <>\n    //       {/* {localStorage.clear()} */}\n    //     </>\n    //   )}\n    // />;\n    // }\n  }\n  // const { response } = error;\n  // console.log(error, \"<<< error in interceptors\");\n  // if (response.responseCode === 401) {\n  //   return response;\n  // } else if (response.responseCode === 400) {\n  //   return response;\n  // } else if (response.responseCode === 422) {\n  //   return response;\n  // } else {\n  //   return response;\n  // }\n  // return Promise.reject(error.response);\n);\n// client.interceptors.response.use(\n//   // (response) => {\n//   //   if (response.status === 401) {\n//   //     alert(\"You are not authorized\");\n//   //   }\n//   //   return response;\n//   // },\n//   (error) => {\n//     if (error.response && error.response.data) {\n//       return Promise.reject(error.response.data);\n//     }\n//     return Promise.reject(error.message);\n//   }\n// );\n"]},"metadata":{},"sourceType":"module"}